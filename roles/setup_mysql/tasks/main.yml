---
# setup_mysql role

- name: Install required packages for python3-dev (1 of 3)
  ansible.builtin.apt:
    name: python3-dev
    state: latest

- name: Install required packages for python3-pip (2 of 3)
  ansible.builtin.apt:
    name: python3-pip
    state: latest

- name: Install required packages for MySQL-Python (3 of 3)
  ansible.builtin.apt:
    name: libmysqlclient-dev
    state: latest

- name: Install mysqlclient
  ansible.builtin.pip:
    name: mysqlclient
    state: present

- name: Install mariadb-server
  ansible.builtin.apt:
    name: mariadb-server
    state: present
  notify: start mariadb

- name: Configure the database to listen on all ipv4 interfaces
  ansible.builtin.lineinfile:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: "^bind-address            = 127.0.0.1"
    line: "bind-address            = 0.0.0.0"
    owner: root
    group: root
    mode: "0644"
  notify: restart mariadb

- name: Update mysql root password for all root accounts
  community.mysql.mysql_user:
    name: root
    host: "{{ host }}"
    password: "{{ mysql_root_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    check_implicit_admin: true
    priv: "*.*:ALL,GRANT"
  loop:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  loop_control:
    loop_var: host
    label: "Granting root access on {{ host }}"

- name: Delete anonymous MySQL user
  community.mysql.mysql_user:
    name: ""
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent
  loop:
    - localhost
    - "{{ ansible_nodename }}"
  loop_control:
    loop_var: dbuser
    label: "Removing DB user {{ dbuser }}"

- name: Delete Hostname based MySQL user
  community.mysql.mysql_user:
    name: root
    host: "{{ ansible_nodename }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent

- name: Remove MySQL test database
  community.mysql.mysql_db:
    name: test
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: absent

- name: Create Wordpress database
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_wordpress_database }}"
    state: present

- name: Create user with all applicataion database privileges
  community.mysql.mysql_user:
    name: "{{ mysql_wordpress_username }}"
    host: "{{ hostvars[vm].private_dns_name }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    password: "{{ mysql_wordpress_password }}"
    encrypted: false
    append_privs: true
    priv: '{{ mysql_wordpress_database }}.*:ALL'
    state: present
  loop: "{{ groups['webserver'] }}"
  loop_control:
    loop_var: vm
    label: "Allowing external connection from {{ hostvars[vm].private_dns_name }} to application database"

...
